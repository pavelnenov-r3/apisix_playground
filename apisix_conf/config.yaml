# This is a sample config.yaml for Apache APISIX
# Make sure this file is mounted to /usr/local/apisix/conf/config.yaml in your APISIX container

apisix:
  nginx_config:                     # Config for render the template to generate nginx.conf
    # user: root                    # Set the execution user of the worker process. This is only
                                    # effective if the master process runs with super-user privileges.
    error_log: logs/error.log       # Location of the error log.
    error_log_level:  debug
  node_listen: 9080           # The port APISIX listens on for proxy requests (HTTP)
                              # For HTTPS, APISIX typically listens on 9443 (configure SSL separately)
  enable_admin: true          # Enables the Admin API
  admin_key:                  # Admin API access control.
                              # For security, you should set at least one key.
                              # If empty or not set, and 'enable_admin_ssl' is false,
                              # admin API might be accessible without auth on 127.0.0.1 by default.
                              # It's best practice to secure this.
     - name: "admin"
       key: "edd1c9f034335f136f87ad84b625c8f1" # Example key, PLEASE CHANGE THIS
       role: "admin"
  # enable_prometheus: true   # Set to true if you want to expose Prometheus metrics
  # prometheus_export_addr:   # Address for Prometheus exporter to listen on
  #   ip: "0.0.0.0"
  #   port: 9091
  real_ip_header: "X-Real-IP" # Header to identify client's real IP address
  real_ip_from:               # CIDR ranges of trusted proxies
    - "127.0.0.1"
    - "::1"
    # Add your Docker network's gateway or other trusted proxy IPs if needed
    # e.g., if your docker network is 172.18.0.0/16, you might add 172.18.0.1

deployment:
  admin:
    enable_admin: true
    allow_admin: # <--- ADD THIS SECTION TO ALLOW YOUR HOST IP
      - "0.0.0.0/0"  # Allows any IPv4 - USE WITH CAUTION, good for local dev
      - "::/0"       # Allows any IPv6 - USE WITH CAUTION
    # The admin_key here is superseded by deployment.admin.admin_key, can be removed for clarity
    # admin_key:
    #   - name: "admin"
    #     key: "edd1c9f034335f136f87ad84b625c8f1"
    #     role: "admin"
    real_ip_header: "X-Real-IP"
    real_ip_from:
      - "127.0.0.1"
      - "::1"
    admin_key:
      - name: admin
        key: 'edd1c9f034335f136f87ad84b625c8f1'  # using fixed API token has security risk, please update it when you deploy to production environment. If passed empty then will be autogenerated by APISIX and will be written back here. Recommended is to use external mechanism to generate and store the token.
        role: admin
  role: traditional           # Default role, uses etcd for configuration
  role_traditional:
    config_provider: etcd   # Explicitly states etcd as the config provider

  etcd:
    host:
      - "http://etcd-server:2379" # THIS IS THE CRITICAL LINE
                                # "etcd-server" is the service name of your etcd container
                                # in the Docker network.
                                # "2379" is the default client port for etcd.
  prefix: "/apisix"           # The prefix in etcd under which APISIX stores its data
  timeout: 30                 # Timeout for etcd requests in seconds (e.g., 30 seconds)
  # user: ""                  # Username for etcd authentication (if enabled)
  # password: ""              # Password for etcd authentication (if enabled)
  # tls:                      # TLS settings for connecting to etcd (if etcd uses TLS)
  #   verify: false
  #   cert: ""
  #   key: ""
  #   ca: ""
  #   sni: ""

plugins:                        # List of plugins that APISIX will load.
                                # By default, many common plugins are loaded.
                                # You can customize this list.
  - "limit-conn"
  - "limit-count"
  - "limit-req"
  # - "key-auth"                # Authentication plugin
  - "openid-connect"          # For integration with Keycloak or other OIDC providers
  - "proxy-rewrite"
  # - "jwt-auth"
  # - "basic-auth"
  # - "wolf-rbac"
  # - "prometheus"              # If enable_prometheus is true
  # - "node-status"
  # - "http-logger"
  # - "tcp-logger"
  # - "udp-logger"
  # - "zipkin"
  # - "skywalking"
  # - "serverless"
  # ... and many more. Add what you need. If this list is empty or omitted,
  # APISIX might load a default set or all available plugins depending on the version.
  # It's good practice to list the plugins you intend to use.

# nginx_config:                 # Advanced: allows you to add custom Nginx directives
#   main_configuration_snippet: |
#     # worker_rlimit_nofile 20480;
#   http_configuration_snippet: |
#     # server_names_hash_bucket_size 128;
#     # server_names_hash_max_size 2048;
#   http_server_configuration_snippet: |
#     # Custom directives for the server block
#   http_admin_configuration_snippet: |
#     # Custom directives for the admin server block
#   stream_configuration_snippet: |
#     # Custom directives for the stream block
